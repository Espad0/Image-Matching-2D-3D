[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vision3d"
version = "1.0.0"
description = "State-of-the-art 3D reconstruction from images using deep learning"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Andrej Nesterov", email = "your.email@example.com"},
]
maintainers = [
    {name = "Andrej Nesterov", email = "your.email@example.com"},
]
keywords = [
    "computer-vision",
    "3d-reconstruction",
    "deep-learning",
    "structure-from-motion",
    "feature-matching",
    "loftr",
    "superglue",
    "colmap",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
]

[project.urls]
Homepage = "https://github.com/yourusername/vision3d"
Documentation = "https://vision3d.readthedocs.io/"
Repository = "https://github.com/yourusername/vision3d"
"Bug Tracker" = "https://github.com/yourusername/vision3d/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.3.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "flake8>=4.0.0",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinxcontrib-napoleon>=0.7",
]
notebook = [
    "notebook>=6.4.0",
    "ipywidgets>=7.7.0",
]

[project.scripts]
vision3d = "vision3d.cli:main"
vision3d-reconstruct = "vision3d.scripts.reconstruct:main"
vision3d-benchmark = "vision3d.scripts.benchmark:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["vision3d"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]